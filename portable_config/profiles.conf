#-- Shader Profiles -------------------------------------------------------#

[default-shaders]
glsl-shaders-clr
glsl-shader=~~/shaders/Misc/CfL_Prediction.glsl
glsl-shader=~~/shaders/Misc/SSimDownscaler.glsl
#glsl-shader=~~/shaders/HDeband/hdeband.glsl

[acmedownscale]
glsl-shaders-clr
glsl-shader=~~/shaders/Misc/acme0.5x.glsl
glsl-shader=~~/shaders/Misc/SSimDownscaler.glsl
glsl-shader=~~/shaders/HDeband/hdeband-lq.glsl

[anime4k-restore]
glsl-shaders-clr
glsl-shader=~~/shaders/Anime4K/Anime4K_Restore_CNN_VL.glsl
glsl-shader=~~/shaders/Anime4K/Anime4K_Darken_HQ.glsl
glsl-shader=~~/shaders/Anime4K/Anime4K_Thin_HQ.glsl

[fsrcnnx-restore-a]
profile=default-shaders
glsl-shader=~~/shaders/FSRCNNX/FSRCNNX_x1_d_anime.glsl
glsl-shader=~~/shaders/Anime4K/Anime4K_Darken_HQ.glsl
glsl-shader=~~/shaders/Anime4K/Anime4K_Thin_HQ.glsl

[fsrcnnx-restore-g]
profile=default-shaders
glsl-shader=~~/shaders/FSRCNNX/FSRCNNX_x1_d.glsl

[amd-fsr]
profile=default-shaders
glsl-shader=~~/shaders/AMD/FSR.glsl
glsl-shader=~~/shaders/AMD/CAS-scaled.glsl

[ravu-zoom]
profile=default-shaders
glsl-shader=~~/shaders/RAVU/ravu-zoom-ar-r3.hook

[upscale-clean-g]
profile=default-shaders
glsl-shader=~~/shaders/FSRCNNX/FSRCNNX_x2.glsl
glsl-shader=~~/shaders/RAVU/ravu-zoom-ar-r2.hook

[upscale-compr-g]
profile=default-shaders
glsl-shader=~~/shaders/FSRCNNX/FSRCNNX_x2_d.glsl
glsl-shader=~~/shaders/RAVU/ravu-zoom-ar-r2.hook

[upscale-clean-a]
profile=default-shaders
glsl-shader=~~/shaders/ArtCNN/ArtCNN_C4F32.glsl
glsl-shader=~~/shaders/RAVU/ravu-zoom-ar-r2.hook

[upscale-compr-a]
profile=default-shaders
glsl-shader=~~/shaders/Anime4K/Anime4K_Restore_CNN_VL.glsl
glsl-shader=~~/shaders/CuNNy/CuNNy-4x16-DS.glsl
glsl-shader=~~/shaders/RAVU/ravu-zoom-ar-r2.hook

[retro-shaders]
glsl-shaders-clr
glsl-shader=~~/shaders/Retro/crt-lottes.glsl
glsl-shader=~~/shaders/Retro/gba.glsl

[bt.2020]
profile=default-shaders
glsl-shader=~~/shaders/hdr-toys/transfer-function/bt1886_inv.glsl
glsl-shader=~~/shaders/hdr-toys/gamut-mapping/bottosson.glsl
glsl-shader=~~/shaders/hdr-toys/transfer-function/bt1886.glsl

[bt.2100-hlg]
profile=default-shaders
glsl-shader=~~/shaders/hdr-toys/utils/clip_both.glsl
glsl-shader=~~/shaders/hdr-toys/transfer-function/hlg_inv.glsl
glsl-shader=~~/shaders/hdr-toys/tone-mapping/dynamic.glsl
glsl-shader=~~/shaders/hdr-toys/gamut-mapping/bottosson.glsl
glsl-shader=~~/shaders/hdr-toys/transfer-function/bt1886.glsl

[bt.2100-pq]
profile=default-shaders
glsl-shader=~~/shaders/hdr-toys/utils/clip_both.glsl
glsl-shader=~~/shaders/hdr-toys/transfer-function/pq_inv.glsl
glsl-shader=~~/shaders/hdr-toys/tone-mapping/dynamic.glsl
glsl-shader=~~/shaders/hdr-toys/gamut-mapping/bottosson.glsl
glsl-shader=~~/shaders/hdr-toys/transfer-function/bt1886.glsl

[dovi-p5]
profile=default-shaders
glsl-shader=~~/shaders/hdr-toys/utils/clip_both.glsl
glsl-shader=~~/shaders/hdr-toys/transfer-function/pq_inv.glsl
glsl-shader=~~/shaders/hdr-toys/tone-mapping/dynamic.glsl
glsl-shader=~~/shaders/hdr-toys/gamut-mapping/bottosson.glsl
glsl-shader=~~/shaders/hdr-toys/transfer-function/bt1886.glsl

[openexr]
profile-cond=get("tone-mapping") == "clip" and get("file-format") == "exr_pipe"
profile-restore=copy
target-prim=bt.2020
target-trc=linear
gamut-mapping-mode=clip
glsl-shader=~~/shaders/hdr-toys/utils/clip_black.glsl
glsl-shader=~~/shaders/hdr-toys/tone-mapping/aces.glsl
glsl-shader=~~/shaders/hdr-toys/utils/black_point_compensation.glsl
glsl-shader=~~/shaders/hdr-toys/gamut-mapping/clip.glsl
glsl-shader=~~/shaders/hdr-toys/transfer-function/bt1886.glsl

#-- Video Profiles --------------------------------------------------------#

[gpu-default]
vo=gpu
gpu-api=auto

[gpu-vulkan]
vo=gpu-next
gpu-api=vulkan

[gpu-directx]
vo=direct3d
gpu-api=d3d11

[hig-gpu]
scale=ewa_lanczos4sharpest
dscale=mitchell
cscale=ewa_lanczossharp
correct-downscaling=yes
linear-downscaling=no
linear-upscaling=no
sigmoid-upscaling=yes
deband=no
hdr-compute-peak=yes
allow-delayed-peak-detect=no

[med-gpu]
scale=lanczos
dscale=mitchell
cscale=lanczos
correct-downscaling=yes
linear-downscaling=yes
linear-upscaling=no
sigmoid-upscaling=yes
deband=yes
hdr-compute-peak=yes
allow-delayed-peak-detect=yes

[low-gpu]
scale=bicubic_fast
dscale=bicubic_fast
cscale=bicubic_fast
correct-downscaling=no
linear-downscaling=no
linear-upscaling=no
sigmoid-upscaling=no
deband=no
hdr-compute-peak=no
allow-delayed-peak-detect=yes

[image-gpu]
hwdec=no
scale=ewa_lanczos
dscale=ewa_lanczos
cscale=ewa_lanczos
correct-downscaling=yes
linear-downscaling=yes
linear-upscaling=no
sigmoid-upscaling=yes
deband=no
hdr-compute-peak=yes
allow-delayed-peak-detect=no

[pixart-gpu]
glsl-shaders-clr
scale=oversample
dscale=mitchell
cscale=oversample
correct-downscaling=yes
linear-downscaling=yes
linear-upscaling=yes
sigmoid-upscaling=no
deband=no
hdr-compute-peak=no
allow-delayed-peak-detect=no

#-- Benchmark Function ----------------------------------------------------#

[benchmark-start]
aid=no
untimed=yes
framedrop=no
video-sync=display-desync
vulkan-swap-mode=immediate
opengl-swapinterval=0
d3d11-sync-interval=0
osd-msg1='FPS: ${estimated-display-fps}'

[benchmark-stop]
aid=auto
untimed=no
framedrop=vo
video-sync=audio
vulkan-swap-mode=auto
opengl-swapinterval=1
d3d11-sync-interval=1
osd-msg1=''

#-- Conditional Profiles - Add # before profile-cond to disable them.------#

[bt.2020-auto]
profile-cond=get("tone-mapping") == "clip" and get("video-params/primaries") == "bt.2020" and get("video-params/gamma") == "bt.1886"
profile-restore=copy
gamut-mapping-mode=clip
target-prim=bt.2020
target-trc=bt.1886
profile=bt.2020

[bt.2100-hlg-auto]
profile-cond=get("tone-mapping") == "clip" and get("video-params/primaries") == "bt.2020" and get("video-params/gamma") == "hlg"
profile-restore=copy
gamut-mapping-mode=clip
target-prim=bt.2020
target-trc=hlg
profile=bt.2100-hlg

[bt.2100-pq-auto]
profile-cond=get("tone-mapping") == "clip" and get("video-params/primaries") == "bt.2020" and get("video-params/gamma") == "pq"
profile-restore=copy
gamut-mapping-mode=clip
target-prim=bt.2020
target-trc=pq
profile=bt.2100-pq

[dovi-p5-auto]
profile-cond=get("tone-mapping") == "clip" and get("video-params/primaries") == "bt.709" and get("video-params/gamma") == "bt.1886" and get("video-out-params/max-luma") > 203
profile-restore=copy
gamut-mapping-mode=clip
target-prim=bt.2020
target-trc=pq
profile=dovi-p5

[openexr-auto]
profile-cond=get("tone-mapping") == "clip" and get("file-format") == "exr_pipe"
profile-restore=copy
gamut-mapping-mode=clip
target-prim=bt.2020
target-trc=linear
profile=openexr

[auto-fill]
profile-cond=((get("display-width", 1920) / get("video-params/aspect", 1.777)) <= get("height", 1080)) and (get("height", 1080) > get("display-height", 1080))
profile-restore=copy
panscan=1.0

[interpolation-activate]
profile-cond=get("interpolation")
profile-restore=copy
video-sync=display-resample

[format-webm]
profile-cond=string.match(p.filename, "%.webm$")~=nil
profile-restore=copy
loop-file=inf

[format-gif]
profile-cond=string.match(p.filename, "%.gif$")~=nil
profile-restore=copy
profile=pixart-gpu
loop-file=inf

[audio-file]
profile-cond=string.match(p.filename, "%.mp3$")~=nil or string.match(p.filename, "%.wav$")~=nil or string.match(p.filename, "%.ogm$")~=nil or string.match(p.filename, "%.flac$")~=nil or string.match(p.filename, "%.m4a$")~=nil or string.match(p.filename, "%.wma$")~=nil or string.match(p.filename, "%.ogg$")~=nil or string.match(p.filename, "%.opus$")~=nil or string.match(p.filename, "%.ac3$")~=nil
profile-restore=copy
profile=image-gpu
audio-pitch-correction=no
interpolation=no
loop-playlist=inf
ontop=yes

[loop-small]
profile-cond=get("duration") > 0 and get("duration") <= 60
profile-restore=copy
loop-file=inf

[uhd8k-fast-downscale]
profile-cond=get("width", 1920)>=7680 and get("height", 1080)>=2160
profile-restore=copy
profile=acmedownscale

[protocol.https]
cache=yes
loop-file=inf
save-position-on-quit=yes

[protocol.http]
cache=yes
loop-file=inf
save-position-on-quit=yes